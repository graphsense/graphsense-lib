# This file is used to configure your project.
# Read more about the various options under:
# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html
# https://setuptools.pypa.io/en/latest/references/keywords.html

[metadata]
name = graphsense-lib
description = Graphsense backend lib and automation cli
author = Iknaio Cryptoasset Analytics GmbH
author_email = contact@ikna.io
license = MIT
license_files = LICENSE
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8; variant=GFM
url = https://graphsense.github.io/
# Add here related links, for example:
project_urls =
#    Documentation = https://graphsense.github.io/graphsense-lib
    Source = https://github.com/graphsense/graphsense-lib
    Changelog = https://github.com/graphsense/graphsense-lib/blob/master/CHANGELOG.md
    Tracker = https://github.com/graphsense/graphsense-lib/issues
#    Conda-Forge = https://anaconda.org/conda-forge/pyscaffold
    Download = https://github.com/graphsense
#    Twitter = https://twitter.com/graphsense

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Topic :: Utilities



[options]
zip_safe = True
packages = find_namespace:
include_package_data = True
package_dir =
    =src

# Require a min/specific Python version (comma-separated conditions)
python_requires = >=3.8, <3.11

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
    importlib-metadata; python_version<"3.8"
    cassandra-driver>=3.27.0
    lz4>=4.3.2
    filelock>=3.8.0
    click>=8.0.3
    pandas>=1.4.1
    methodtools>=0.4
    simplejson>=3.17.6
    goodconf[yaml]>=3.0.0
    requests>=2.27.1
    parsy>=2.0, <3.0
    rich>=12.6.0, <13.0
    eth-event>=1.2.3, <2.0
    eth-hash~=0.3.0
    ethereum-etl~=2.4.1
    pyarrow>=16.0.0, <17.0.0
    chainside-btcpy~=0.6
    cashaddress>=1.0.6, < 1.1
    tenacity>=8.2.3
    graphsense-bitcoin-etl==1.5.4
    base58>=2.1
    bitarray>=2.9
    grpcio>=1.48.2
    deltalake~=0.22.3
    duckdb>=1.0.0



[options.packages.find]
where = src
exclude =
    tests
    src/grapsenselib/ingest/tron/protos

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install ethpector[PDF]` like:
# PDF = ReportLab; RXP

# Add here test requirements (semicolon/line-separated)
testing =
    setuptools
    pytest
    pytest-cov
    testcontainers[cassandra]>=4.9.1
    pytest-vcr
    vcrpy

dev =
    setuptools
    pytest
    pytest-cov
    tox
    ruff>=0.9.2
    pre-commit
    setuptools_scm
    pdbpp
    grpcio-tools
    testcontainers[cassandra]>=4.9.1
    pytest-vcr
    vcrpy

[options.entry_points]
# Add here console scripts like:
console_scripts =
    graphsense-cli = graphsenselib.cli:main
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this pytest issue.
addopts =
    --cov graphsenselib --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
# Use pytest markers to select/deselect specific tests
markers =
    slow: mark tests as slow (deselect with '-m "not slow"')
    vcr:
#     system: mark end-to-end system tests

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 88
extend_ignore = E203, W503, E721, A005
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    .tox
    build
    dist
    .eggs
    *pb2.py
    *pb2_grpc.py


[isort]
profile=black
src_paths=src,tests
skip_glob = *pb2_grpc.py
            *pb2.py


[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.1.4
package = graphsense-lib
