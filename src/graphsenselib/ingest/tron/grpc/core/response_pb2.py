# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: graphsenselib/ingest/tron/grpc/core/response.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from graphsenselib.ingest.tron.grpc.core import common_pb2 as graphsenselib_dot_ingest_dot_tron_dot_grpc_dot_core_dot_common__pb2
from graphsenselib.ingest.tron.grpc.core import chain_pb2 as graphsenselib_dot_ingest_dot_tron_dot_grpc_dot_core_dot_chain__pb2
from graphsenselib.ingest.tron.grpc.core import contract_pb2 as graphsenselib_dot_ingest_dot_tron_dot_grpc_dot_core_dot_contract__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n2graphsenselib/ingest/tron/grpc/core/response.proto\x12\x08protocol\x1a\x30graphsenselib/ingest/tron/grpc/core/common.proto\x1a/graphsenselib/ingest/tron/grpc/core/chain.proto\x1a\x32graphsenselib/ingest/tron/grpc/core/contract.proto\"\x84\x01\n\x0e\x42lockExtention\x12\x34\n\x0ctransactions\x18\x01 \x03(\x0b\x32\x1e.protocol.TransactionExtention\x12+\n\x0c\x62lock_header\x18\x02 \x01(\x0b\x32\x15.protocol.BlockHeader\x12\x0f\n\x07\x62lockid\x18\x03 \x01(\x0c\"=\n\x12\x42lockListExtention\x12\'\n\x05\x62lock\x18\x01 \x03(\x0b\x32\x18.protocol.BlockExtention\"\xaa\x03\n\x11TransactionReturn\x12\x0e\n\x06result\x18\x01 \x01(\x08\x12\x37\n\x04\x63ode\x18\x02 \x01(\x0e\x32).protocol.TransactionReturn.response_code\x12\x0f\n\x07message\x18\x03 \x01(\x0c\"\xba\x02\n\rresponse_code\x12\x0b\n\x07SUCCESS\x10\x00\x12\x0c\n\x08SIGERROR\x10\x01\x12\x1b\n\x17\x43ONTRACT_VALIDATE_ERROR\x10\x02\x12\x16\n\x12\x43ONTRACT_EXE_ERROR\x10\x03\x12\x12\n\x0e\x42\x41NDWITH_ERROR\x10\x04\x12\x19\n\x15\x44UP_TRANSACTION_ERROR\x10\x05\x12\x0f\n\x0bTAPOS_ERROR\x10\x06\x12\x1d\n\x19TOO_BIG_TRANSACTION_ERROR\x10\x07\x12 \n\x1cTRANSACTION_EXPIRATION_ERROR\x10\x08\x12\x0f\n\x0bSERVER_BUSY\x10\t\x12\x11\n\rNO_CONNECTION\x10\n\x12#\n\x1fNOT_ENOUGH_EFFECTIVE_CONNECTION\x10\x0b\x12\x0f\n\x0bOTHER_ERROR\x10\x14\"\x96\x01\n\x14TransactionExtention\x12*\n\x0btransaction\x18\x01 \x01(\x0b\x32\x15.protocol.Transaction\x12\x0c\n\x04txid\x18\x02 \x01(\x0c\x12\x17\n\x0f\x63onstant_result\x18\x03 \x03(\x0c\x12+\n\x06result\x18\x04 \x01(\x0b\x32\x1b.protocol.TransactionReturn\"3\n\x0bWitnessList\x12$\n\twitnesses\x18\x01 \x03(\x0b\x32\x11.protocol.Witness\"5\n\x0cProposalList\x12%\n\tproposals\x18\x01 \x03(\x0b\x32\x12.protocol.Proposal\"5\n\x0c\x45xchangeList\x12%\n\texchanges\x18\x01 \x03(\x0b\x32\x12.protocol.Exchange\">\n\x0e\x41ssetIssueList\x12,\n\x06\x61ssets\x18\x01 \x03(\x0b\x32\x1c.protocol.AssetIssueContract\"+\n\tBlockList\x12\x1e\n\x05\x62lock\x18\x01 \x03(\x0b\x32\x0f.protocol.Block\"=\n\x0fTransactionList\x12*\n\x0btransaction\x18\x01 \x03(\x0b\x32\x15.protocol.Transaction\"D\n\x18\x44\x65legatedResourceMessage\x12\x14\n\x0c\x66rom_address\x18\x01 \x01(\x0c\x12\x12\n\nto_address\x18\x02 \x01(\x0c\"O\n\x15\x44\x65legatedResourceList\x12\x36\n\x11\x64\x65legatedResource\x18\x01 \x03(\x0b\x32\x1b.protocol.DelegatedResource\">\n\x17\x41\x64\x64ressPrKeyPairMessage\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\t\x12\x12\n\nprivateKey\x18\x02 \x01(\t\"}\n\x14\x45\x61syTransferResponse\x12*\n\x0btransaction\x18\x01 \x01(\x0b\x32\x15.protocol.Transaction\x12+\n\x06result\x18\x02 \x01(\x0b\x32\x1b.protocol.TransactionReturn\x12\x0c\n\x04txid\x18\x03 \x01(\x0c\"a\n\x18SmartContractDataWrapper\x12/\n\x0esmart_contract\x18\x01 \x01(\x0b\x32\x17.protocol.SmartContract\x12\x14\n\x0cruntime_code\x18\x02 \x01(\x0c\"\xf0\x01\n\x13InternalTransaction\x12\x0c\n\x04hash\x18\x01 \x01(\x0c\x12\x16\n\x0e\x63\x61ller_address\x18\x02 \x01(\x0c\x12\x1a\n\x12transferTo_address\x18\x03 \x01(\x0c\x12\x42\n\rcallValueInfo\x18\x04 \x03(\x0b\x32+.protocol.InternalTransaction.CallValueInfo\x12\x0c\n\x04note\x18\x05 \x01(\x0c\x12\x10\n\x08rejected\x18\x06 \x01(\x08\x1a\x33\n\rCallValueInfo\x12\x11\n\tcallValue\x18\x01 \x01(\x03\x12\x0f\n\x07tokenId\x18\x02 \x01(\t\"\xd5\x01\n\x0fResourceReceipt\x12\x14\n\x0c\x65nergy_usage\x18\x01 \x01(\x03\x12\x12\n\nenergy_fee\x18\x02 \x01(\x03\x12\x1b\n\x13origin_energy_usage\x18\x03 \x01(\x03\x12\x1a\n\x12\x65nergy_usage_total\x18\x04 \x01(\x03\x12\x11\n\tnet_usage\x18\x05 \x01(\x03\x12\x0f\n\x07net_fee\x18\x06 \x01(\x03\x12;\n\x06result\x18\x07 \x01(\x0e\x32+.protocol.Transaction.Result.contractResult\"\xf0\x05\n\x0fTransactionInfo\x12\n\n\x02id\x18\x01 \x01(\x0c\x12\x0b\n\x03\x66\x65\x65\x18\x02 \x01(\x03\x12\x13\n\x0b\x62lockNumber\x18\x03 \x01(\x03\x12\x16\n\x0e\x62lockTimeStamp\x18\x04 \x01(\x03\x12\x16\n\x0e\x63ontractResult\x18\x05 \x03(\x0c\x12\x18\n\x10\x63ontract_address\x18\x06 \x01(\x0c\x12*\n\x07receipt\x18\x07 \x01(\x0b\x32\x19.protocol.ResourceReceipt\x12*\n\x03log\x18\x08 \x03(\x0b\x32\x1d.protocol.TransactionInfo.Log\x12.\n\x06result\x18\t \x01(\x0e\x32\x1e.protocol.TransactionInfo.code\x12\x12\n\nresMessage\x18\n \x01(\x0c\x12\x14\n\x0c\x61ssetIssueID\x18\x0e \x01(\t\x12\x17\n\x0fwithdraw_amount\x18\x0f \x01(\x03\x12\x17\n\x0funfreeze_amount\x18\x10 \x01(\x03\x12<\n\x15internal_transactions\x18\x11 \x03(\x0b\x32\x1d.protocol.InternalTransaction\x12 \n\x18\x65xchange_received_amount\x18\x12 \x01(\x03\x12&\n\x1e\x65xchange_inject_another_amount\x18\x13 \x01(\x03\x12(\n exchange_withdraw_another_amount\x18\x14 \x01(\x03\x12\x13\n\x0b\x65xchange_id\x18\x15 \x01(\x03\x12 \n\x18shielded_transaction_fee\x18\x16 \x01(\x03\x12\x0f\n\x07orderId\x18\x19 \x01(\x0c\x12\x31\n\x0corderDetails\x18\x1a \x03(\x0b\x32\x1b.protocol.MarketOrderDetail\x1a\x34\n\x03Log\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\x0c\x12\x0e\n\x06topics\x18\x02 \x03(\x0c\x12\x0c\n\x04\x64\x61ta\x18\x03 \x01(\x0c\"\x1e\n\x04\x63ode\x12\n\n\x06SUCESS\x10\x00\x12\n\n\x06\x46\x41ILED\x10\x01\"\xb5\x01\n\x07Witness\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\x0c\x12\x11\n\tvoteCount\x18\x02 \x01(\x03\x12\x0e\n\x06pubKey\x18\x03 \x01(\x0c\x12\x0b\n\x03url\x18\x04 \x01(\t\x12\x15\n\rtotalProduced\x18\x05 \x01(\x03\x12\x13\n\x0btotalMissed\x18\x06 \x01(\x03\x12\x16\n\x0elatestBlockNum\x18\x07 \x01(\x03\x12\x15\n\rlatestSlotNum\x18\x08 \x01(\x03\x12\x0e\n\x06isJobs\x18\t \x01(\x08\"\xf0\x0f\n\x07\x41\x63\x63ount\x12\x14\n\x0c\x61\x63\x63ount_name\x18\x01 \x01(\x0c\x12#\n\x04type\x18\x02 \x01(\x0e\x32\x15.protocol.AccountType\x12\x0f\n\x07\x61\x64\x64ress\x18\x03 \x01(\x0c\x12\x0f\n\x07\x62\x61lance\x18\x04 \x01(\x03\x12\x1d\n\x05votes\x18\x05 \x03(\x0b\x32\x0e.protocol.Vote\x12+\n\x05\x61sset\x18\x06 \x03(\x0b\x32\x1c.protocol.Account.AssetEntry\x12/\n\x07\x61ssetV2\x18\x38 \x03(\x0b\x32\x1e.protocol.Account.AssetV2Entry\x12(\n\x06\x66rozen\x18\x07 \x03(\x0b\x32\x18.protocol.Account.Frozen\x12\x11\n\tnet_usage\x18\x08 \x01(\x03\x12\x37\n/acquired_delegated_frozen_balance_for_bandwidth\x18) \x01(\x03\x12.\n&delegated_frozen_balance_for_bandwidth\x18* \x01(\x03\x12\x13\n\x0b\x63reate_time\x18\t \x01(\x03\x12\x1c\n\x14latest_opration_time\x18\n \x01(\x03\x12\x11\n\tallowance\x18\x0b \x01(\x03\x12\x1c\n\x14latest_withdraw_time\x18\x0c \x01(\x03\x12\x0c\n\x04\x63ode\x18\r \x01(\x0c\x12\x12\n\nis_witness\x18\x0e \x01(\x08\x12\x14\n\x0cis_committee\x18\x0f \x01(\x08\x12/\n\rfrozen_supply\x18\x10 \x03(\x0b\x32\x18.protocol.Account.Frozen\x12\x19\n\x11\x61sset_issued_name\x18\x11 \x01(\x0c\x12\x17\n\x0f\x61sset_issued_ID\x18\x39 \x01(\x0c\x12T\n\x1blatest_asset_operation_time\x18\x12 \x03(\x0b\x32/.protocol.Account.LatestAssetOperationTimeEntry\x12X\n\x1dlatest_asset_operation_timeV2\x18: \x03(\x0b\x32\x31.protocol.Account.LatestAssetOperationTimeV2Entry\x12\x16\n\x0e\x66ree_net_usage\x18\x13 \x01(\x03\x12\x46\n\x14\x66ree_asset_net_usage\x18\x14 \x03(\x0b\x32(.protocol.Account.FreeAssetNetUsageEntry\x12J\n\x16\x66ree_asset_net_usageV2\x18; \x03(\x0b\x32*.protocol.Account.FreeAssetNetUsageV2Entry\x12\x1b\n\x13latest_consume_time\x18\x15 \x01(\x03\x12 \n\x18latest_consume_free_time\x18\x16 \x01(\x03\x12\x12\n\naccount_id\x18\x17 \x01(\x0c\x12;\n\x10\x61\x63\x63ount_resource\x18\x1a \x01(\x0b\x32!.protocol.Account.AccountResource\x12\x10\n\x08\x63odeHash\x18\x1e \x01(\x0c\x12.\n\x10owner_permission\x18\x1f \x01(\x0b\x32\x14.protocol.Permission\x12\x30\n\x12witness_permission\x18  \x01(\x0b\x32\x14.protocol.Permission\x12/\n\x11\x61\x63tive_permission\x18! \x03(\x0b\x32\x14.protocol.Permission\x1a\x35\n\x06\x46rozen\x12\x16\n\x0e\x66rozen_balance\x18\x01 \x01(\x03\x12\x13\n\x0b\x65xpire_time\x18\x02 \x01(\x03\x1a,\n\nAssetEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01\x1a.\n\x0c\x41ssetV2Entry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01\x1a?\n\x1dLatestAssetOperationTimeEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01\x1a\x41\n\x1fLatestAssetOperationTimeV2Entry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01\x1a\x38\n\x16\x46reeAssetNetUsageEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01\x1a:\n\x18\x46reeAssetNetUsageV2Entry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01\x1a\xc3\x02\n\x0f\x41\x63\x63ountResource\x12\x14\n\x0c\x65nergy_usage\x18\x01 \x01(\x03\x12;\n\x19\x66rozen_balance_for_energy\x18\x02 \x01(\x0b\x32\x18.protocol.Account.Frozen\x12&\n\x1elatest_consume_time_for_energy\x18\x03 \x01(\x03\x12\x34\n,acquired_delegated_frozen_balance_for_energy\x18\x04 \x01(\x03\x12+\n#delegated_frozen_balance_for_energy\x18\x05 \x01(\x03\x12\x15\n\rstorage_limit\x18\x06 \x01(\x03\x12\x15\n\rstorage_usage\x18\x07 \x01(\x03\x12$\n\x1clatest_exchange_storage_time\x18\x08 \x01(\x03\"r\n\x11MarketOrderDetail\x12\x14\n\x0cmakerOrderId\x18\x01 \x01(\x0c\x12\x14\n\x0ctakerOrderId\x18\x02 \x01(\x0c\x12\x18\n\x10\x66illSellQuantity\x18\x03 \x01(\x03\x12\x17\n\x0f\x66illBuyQuantity\x18\x04 \x01(\x03\"\xd1\x02\n\x08Proposal\x12\x13\n\x0bproposal_id\x18\x01 \x01(\x03\x12\x18\n\x10proposer_address\x18\x02 \x01(\x0c\x12\x36\n\nparameters\x18\x03 \x03(\x0b\x32\".protocol.Proposal.ParametersEntry\x12\x17\n\x0f\x65xpiration_time\x18\x04 \x01(\x03\x12\x13\n\x0b\x63reate_time\x18\x05 \x01(\x03\x12\x11\n\tapprovals\x18\x06 \x03(\x0c\x12\'\n\x05state\x18\x07 \x01(\x0e\x32\x18.protocol.Proposal.State\x1a\x31\n\x0fParametersEntry\x12\x0b\n\x03key\x18\x01 \x01(\x03\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01\"A\n\x05State\x12\x0b\n\x07PENDING\x10\x00\x12\x0f\n\x0b\x44ISAPPROVED\x10\x01\x12\x0c\n\x08\x41PPROVED\x10\x02\x12\x0c\n\x08\x43\x41NCELED\x10\x03\"\xb9\x01\n\x08\x45xchange\x12\x13\n\x0b\x65xchange_id\x18\x01 \x01(\x03\x12\x17\n\x0f\x63reator_address\x18\x02 \x01(\x0c\x12\x13\n\x0b\x63reate_time\x18\x03 \x01(\x03\x12\x16\n\x0e\x66irst_token_id\x18\x06 \x01(\x0c\x12\x1b\n\x13\x66irst_token_balance\x18\x07 \x01(\x03\x12\x17\n\x0fsecond_token_id\x18\x08 \x01(\x0c\x12\x1c\n\x14second_token_balance\x18\t \x01(\x03\"\xb9\x01\n\x11\x44\x65legatedResource\x12\x0c\n\x04\x66rom\x18\x01 \x01(\x0c\x12\n\n\x02to\x18\x02 \x01(\x0c\x12$\n\x1c\x66rozen_balance_for_bandwidth\x18\x03 \x01(\x03\x12!\n\x19\x66rozen_balance_for_energy\x18\x04 \x01(\x03\x12!\n\x19\x65xpire_time_for_bandwidth\x18\x05 \x01(\x03\x12\x1e\n\x16\x65xpire_time_for_energy\x18\x06 \x01(\x03\"Z\n\x1d\x44\x65legatedResourceAccountIndex\x12\x0f\n\x07\x61\x63\x63ount\x18\x01 \x01(\x0c\x12\x14\n\x0c\x66romAccounts\x18\x02 \x03(\x0c\x12\x12\n\ntoAccounts\x18\x03 \x03(\x0c\"Q\n\x0fTransactionSign\x12*\n\x0btransaction\x18\x01 \x01(\x0b\x32\x15.protocol.Transaction\x12\x12\n\nprivateKey\x18\x02 \x01(\x0c\"\x81\x01\n\x0f\x43hainParameters\x12@\n\x0e\x63hainParameter\x18\x01 \x03(\x0b\x32(.protocol.ChainParameters.ChainParameter\x1a,\n\x0e\x43hainParameter\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x03\"\xa0\x11\n\x08NodeInfo\x12\x14\n\x0c\x62\x65ginSyncNum\x18\x01 \x01(\x03\x12\r\n\x05\x62lock\x18\x02 \x01(\t\x12\x15\n\rsolidityBlock\x18\x03 \x01(\t\x12\x1b\n\x13\x63urrentConnectCount\x18\x04 \x01(\x05\x12\x1a\n\x12\x61\x63tiveConnectCount\x18\x05 \x01(\x05\x12\x1b\n\x13passiveConnectCount\x18\x06 \x01(\x05\x12\x11\n\ttotalFlow\x18\x07 \x01(\x03\x12\x31\n\x0cpeerInfoList\x18\x08 \x03(\x0b\x32\x1b.protocol.NodeInfo.PeerInfo\x12\x39\n\x0e\x63onfigNodeInfo\x18\t \x01(\x0b\x32!.protocol.NodeInfo.ConfigNodeInfo\x12\x33\n\x0bmachineInfo\x18\n \x01(\x0b\x32\x1e.protocol.NodeInfo.MachineInfo\x12H\n\x13\x63heatWitnessInfoMap\x18\x0b \x03(\x0b\x32+.protocol.NodeInfo.CheatWitnessInfoMapEntry\x1a:\n\x18\x43heatWitnessInfoMapEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\xcd\x04\n\x08PeerInfo\x12\x15\n\rlastSyncBlock\x18\x01 \x01(\t\x12\x11\n\tremainNum\x18\x02 \x01(\x03\x12\x1b\n\x13lastBlockUpdateTime\x18\x03 \x01(\x03\x12\x10\n\x08syncFlag\x18\x04 \x01(\x08\x12\x1f\n\x17headBlockTimeWeBothHave\x18\x05 \x01(\x03\x12\x18\n\x10needSyncFromPeer\x18\x06 \x01(\x08\x12\x16\n\x0eneedSyncFromUs\x18\x07 \x01(\x08\x12\x0c\n\x04host\x18\x08 \x01(\t\x12\x0c\n\x04port\x18\t \x01(\x05\x12\x0e\n\x06nodeId\x18\n \x01(\t\x12\x13\n\x0b\x63onnectTime\x18\x0b \x01(\x03\x12\x12\n\navgLatency\x18\x0c \x01(\x01\x12\x17\n\x0fsyncToFetchSize\x18\r \x01(\x05\x12\x1e\n\x16syncToFetchSizePeekNum\x18\x0e \x01(\x03\x12\x1e\n\x16syncBlockRequestedSize\x18\x0f \x01(\x05\x12\x15\n\runFetchSynNum\x18\x10 \x01(\x03\x12\x17\n\x0f\x62lockInPorcSize\x18\x11 \x01(\x05\x12\x1b\n\x13headBlockWeBothHave\x18\x12 \x01(\t\x12\x10\n\x08isActive\x18\x13 \x01(\x08\x12\r\n\x05score\x18\x14 \x01(\x05\x12\x11\n\tnodeCount\x18\x15 \x01(\x05\x12\x0e\n\x06inFlow\x18\x16 \x01(\x03\x12\x17\n\x0f\x64isconnectTimes\x18\x17 \x01(\x05\x12\x1d\n\x15localDisconnectReason\x18\x18 \x01(\t\x12\x1e\n\x16remoteDisconnectReason\x18\x19 \x01(\t\x1a\xe5\x03\n\x0e\x43onfigNodeInfo\x12\x13\n\x0b\x63odeVersion\x18\x01 \x01(\t\x12\x12\n\np2pVersion\x18\x02 \x01(\t\x12\x12\n\nlistenPort\x18\x03 \x01(\x05\x12\x16\n\x0e\x64iscoverEnable\x18\x04 \x01(\x08\x12\x16\n\x0e\x61\x63tiveNodeSize\x18\x05 \x01(\x05\x12\x17\n\x0fpassiveNodeSize\x18\x06 \x01(\x05\x12\x14\n\x0csendNodeSize\x18\x07 \x01(\x05\x12\x17\n\x0fmaxConnectCount\x18\x08 \x01(\x05\x12\x1d\n\x15sameIpMaxConnectCount\x18\t \x01(\x05\x12\x18\n\x10\x62\x61\x63kupListenPort\x18\n \x01(\x05\x12\x18\n\x10\x62\x61\x63kupMemberSize\x18\x0b \x01(\x05\x12\x16\n\x0e\x62\x61\x63kupPriority\x18\x0c \x01(\x05\x12\x11\n\tdbVersion\x18\r \x01(\x05\x12\x1c\n\x14minParticipationRate\x18\x0e \x01(\x05\x12\x17\n\x0fsupportConstant\x18\x0f \x01(\x08\x12\x14\n\x0cminTimeRatio\x18\x10 \x01(\x01\x12\x14\n\x0cmaxTimeRatio\x18\x11 \x01(\x01\x12 \n\x18\x61llowCreationOfContracts\x18\x12 \x01(\x03\x12\x1b\n\x13\x61llowAdaptiveEnergy\x18\x13 \x01(\x03\x1a\x8d\x05\n\x0bMachineInfo\x12\x13\n\x0bthreadCount\x18\x01 \x01(\x05\x12\x1b\n\x13\x64\x65\x61\x64LockThreadCount\x18\x02 \x01(\x05\x12\x10\n\x08\x63puCount\x18\x03 \x01(\x05\x12\x13\n\x0btotalMemory\x18\x04 \x01(\x03\x12\x12\n\nfreeMemory\x18\x05 \x01(\x03\x12\x0f\n\x07\x63puRate\x18\x06 \x01(\x01\x12\x13\n\x0bjavaVersion\x18\x07 \x01(\t\x12\x0e\n\x06osName\x18\x08 \x01(\t\x12\x17\n\x0fjvmTotalMemoery\x18\t \x01(\x03\x12\x15\n\rjvmFreeMemory\x18\n \x01(\x03\x12\x16\n\x0eprocessCpuRate\x18\x0b \x01(\x01\x12I\n\x12memoryDescInfoList\x18\x0c \x03(\x0b\x32-.protocol.NodeInfo.MachineInfo.MemoryDescInfo\x12Q\n\x16\x64\x65\x61\x64LockThreadInfoList\x18\r \x03(\x0b\x32\x31.protocol.NodeInfo.MachineInfo.DeadLockThreadInfo\x1a\x63\n\x0eMemoryDescInfo\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x10\n\x08initSize\x18\x02 \x01(\x03\x12\x0f\n\x07useSize\x18\x03 \x01(\x03\x12\x0f\n\x07maxSize\x18\x04 \x01(\x03\x12\x0f\n\x07useRate\x18\x05 \x01(\x01\x1a\x8f\x01\n\x12\x44\x65\x61\x64LockThreadInfo\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x10\n\x08lockName\x18\x02 \x01(\t\x12\x11\n\tlockOwner\x18\x03 \x01(\t\x12\r\n\x05state\x18\x04 \x01(\t\x12\x11\n\tblockTime\x18\x05 \x01(\x03\x12\x10\n\x08waitTime\x18\x06 \x01(\x03\x12\x12\n\nstackTrace\x18\x07 \x01(\t\"\xf2\x02\n\x0bMarketOrder\x12\x10\n\x08order_id\x18\x01 \x01(\x0c\x12\x15\n\rowner_address\x18\x02 \x01(\x0c\x12\x13\n\x0b\x63reate_time\x18\x03 \x01(\x03\x12\x15\n\rsell_token_id\x18\x04 \x01(\x0c\x12\x1b\n\x13sell_token_quantity\x18\x05 \x01(\x03\x12\x14\n\x0c\x62uy_token_id\x18\x06 \x01(\x0c\x12\x1a\n\x12\x62uy_token_quantity\x18\x07 \x01(\x03\x12\"\n\x1asell_token_quantity_remain\x18\t \x01(\x03\x12\"\n\x1asell_token_quantity_return\x18\n \x01(\x03\x12*\n\x05state\x18\x0b \x01(\x0e\x32\x1b.protocol.MarketOrder.State\x12\x0c\n\x04prev\x18\x0c \x01(\x0c\x12\x0c\n\x04next\x18\r \x01(\x0c\"/\n\x05State\x12\n\n\x06\x41\x43TIVE\x10\x00\x12\x0c\n\x08INACTIVE\x10\x01\x12\x0c\n\x08\x43\x41NCELED\x10\x02\"8\n\x0fMarketOrderList\x12%\n\x06orders\x18\x01 \x03(\x0b\x32\x15.protocol.MarketOrder\">\n\x0fMarketOrderPair\x12\x15\n\rsell_token_id\x18\x01 \x01(\x0c\x12\x14\n\x0c\x62uy_token_id\x18\x02 \x01(\x0c\"C\n\x13MarketOrderPairList\x12,\n\torderPair\x18\x01 \x03(\x0b\x32\x19.protocol.MarketOrderPair\"F\n\x0bMarketPrice\x12\x1b\n\x13sell_token_quantity\x18\x01 \x01(\x03\x12\x1a\n\x12\x62uy_token_quantity\x18\x02 \x01(\x03\"e\n\x0fMarketPriceList\x12\x15\n\rsell_token_id\x18\x01 \x01(\x0c\x12\x14\n\x0c\x62uy_token_id\x18\x02 \x01(\x0c\x12%\n\x06prices\x18\x03 \x03(\x0b\x32\x15.protocol.MarketPrice\"#\n\x0fNullifierResult\x12\x10\n\x08is_spent\x18\x01 \x01(\x08\"\xe5\x01\n\x11\x44\x65\x63ryptNotesTRC20\x12\x33\n\x07noteTxs\x18\x01 \x03(\x0b\x32\".protocol.DecryptNotesTRC20.NoteTx\x1a\x9a\x01\n\x06NoteTx\x12\x1c\n\x04note\x18\x01 \x01(\x0b\x32\x0e.protocol.Note\x12\x10\n\x08position\x18\x02 \x01(\x03\x12\x10\n\x08is_spent\x18\x03 \x01(\x08\x12\x0c\n\x04txid\x18\x04 \x01(\x0c\x12\r\n\x05index\x18\x05 \x01(\x05\x12\x11\n\tto_amount\x18\x06 \x01(\t\x12\x1e\n\x16transparent_to_address\x18\x07 \x01(\x0c\"I\n\x13TransactionInfoList\x12\x32\n\x0ftransactionInfo\x18\x01 \x03(\x0b\x32\x19.protocol.TransactionInfo\"\xe7\x02\n\x17TransactionApprovedList\x12\x15\n\rapproved_list\x18\x02 \x03(\x0c\x12\x38\n\x06result\x18\x04 \x01(\x0b\x32(.protocol.TransactionApprovedList.Result\x12\x33\n\x0btransaction\x18\x05 \x01(\x0b\x32\x1e.protocol.TransactionExtention\x1a\xc5\x01\n\x06Result\x12\x44\n\x04\x63ode\x18\x01 \x01(\x0e\x32\x36.protocol.TransactionApprovedList.Result.response_code\x12\x0f\n\x07message\x18\x02 \x01(\t\"d\n\rresponse_code\x12\x0b\n\x07SUCCESS\x10\x00\x12\x1a\n\x16SIGNATURE_FORMAT_ERROR\x10\x01\x12\x19\n\x15\x43OMPUTE_ADDRESS_ERROR\x10\x02\x12\x0f\n\x0bOTHER_ERROR\x10\x14\"\xdf\x03\n\x15TransactionSignWeight\x12(\n\npermission\x18\x01 \x01(\x0b\x32\x14.protocol.Permission\x12\x15\n\rapproved_list\x18\x02 \x03(\x0c\x12\x16\n\x0e\x63urrent_weight\x18\x03 \x01(\x03\x12\x36\n\x06result\x18\x04 \x01(\x0b\x32&.protocol.TransactionSignWeight.Result\x12\x33\n\x0btransaction\x18\x05 \x01(\x0b\x32\x1e.protocol.TransactionExtention\x1a\xff\x01\n\x06Result\x12\x42\n\x04\x63ode\x18\x01 \x01(\x0e\x32\x34.protocol.TransactionSignWeight.Result.response_code\x12\x0f\n\x07message\x18\x02 \x01(\t\"\x9f\x01\n\rresponse_code\x12\x15\n\x11\x45NOUGH_PERMISSION\x10\x00\x12\x19\n\x15NOT_ENOUGH_PERMISSION\x10\x01\x12\x1a\n\x16SIGNATURE_FORMAT_ERROR\x10\x02\x12\x19\n\x15\x43OMPUTE_ADDRESS_ERROR\x10\x03\x12\x14\n\x10PERMISSION_ERROR\x10\x04\x12\x0f\n\x0bOTHER_ERROR\x10\x14\"\x93\x01\n\x08NodeList\x12&\n\x05nodes\x18\x01 \x03(\x0b\x32\x17.protocol.NodeList.Node\x1a_\n\x04Node\x12\x30\n\x07\x61\x64\x64ress\x18\x01 \x01(\x0b\x32\x1f.protocol.NodeList.Node.Address\x1a%\n\x07\x41\x64\x64ress\x12\x0c\n\x04host\x18\x01 \x01(\x0c\x12\x0c\n\x04port\x18\x02 \x01(\x05\"\x87\x03\n\x11\x41\x63\x63ountNetMessage\x12\x13\n\x0b\x66reeNetUsed\x18\x01 \x01(\x03\x12\x14\n\x0c\x66reeNetLimit\x18\x02 \x01(\x03\x12\x0f\n\x07NetUsed\x18\x03 \x01(\x03\x12\x10\n\x08NetLimit\x18\x04 \x01(\x03\x12\x43\n\x0c\x61ssetNetUsed\x18\x05 \x03(\x0b\x32-.protocol.AccountNetMessage.AssetNetUsedEntry\x12\x45\n\rassetNetLimit\x18\x06 \x03(\x0b\x32..protocol.AccountNetMessage.AssetNetLimitEntry\x12\x15\n\rTotalNetLimit\x18\x07 \x01(\x03\x12\x16\n\x0eTotalNetWeight\x18\x08 \x01(\x03\x1a\x33\n\x11\x41ssetNetUsedEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01\x1a\x34\n\x12\x41ssetNetLimitEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01\"\x9f\x04\n\x16\x41\x63\x63ountResourceMessage\x12\x13\n\x0b\x66reeNetUsed\x18\x01 \x01(\x03\x12\x14\n\x0c\x66reeNetLimit\x18\x02 \x01(\x03\x12\x0f\n\x07NetUsed\x18\x03 \x01(\x03\x12\x10\n\x08NetLimit\x18\x04 \x01(\x03\x12H\n\x0c\x61ssetNetUsed\x18\x05 \x03(\x0b\x32\x32.protocol.AccountResourceMessage.AssetNetUsedEntry\x12J\n\rassetNetLimit\x18\x06 \x03(\x0b\x32\x33.protocol.AccountResourceMessage.AssetNetLimitEntry\x12\x15\n\rTotalNetLimit\x18\x07 \x01(\x03\x12\x16\n\x0eTotalNetWeight\x18\x08 \x01(\x03\x12\x12\n\nEnergyUsed\x18\r \x01(\x03\x12\x13\n\x0b\x45nergyLimit\x18\x0e \x01(\x03\x12\x18\n\x10TotalEnergyLimit\x18\x0f \x01(\x03\x12\x19\n\x11TotalEnergyWeight\x18\x10 \x01(\x03\x12\x13\n\x0bstorageUsed\x18\x15 \x01(\x03\x12\x14\n\x0cstorageLimit\x18\x16 \x01(\x03\x1a\x33\n\x11\x41ssetNetUsedEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01\x1a\x34\n\x12\x41ssetNetLimitEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01\x62\x06proto3')



_BLOCKEXTENTION = DESCRIPTOR.message_types_by_name['BlockExtention']
_BLOCKLISTEXTENTION = DESCRIPTOR.message_types_by_name['BlockListExtention']
_TRANSACTIONRETURN = DESCRIPTOR.message_types_by_name['TransactionReturn']
_TRANSACTIONEXTENTION = DESCRIPTOR.message_types_by_name['TransactionExtention']
_WITNESSLIST = DESCRIPTOR.message_types_by_name['WitnessList']
_PROPOSALLIST = DESCRIPTOR.message_types_by_name['ProposalList']
_EXCHANGELIST = DESCRIPTOR.message_types_by_name['ExchangeList']
_ASSETISSUELIST = DESCRIPTOR.message_types_by_name['AssetIssueList']
_BLOCKLIST = DESCRIPTOR.message_types_by_name['BlockList']
_TRANSACTIONLIST = DESCRIPTOR.message_types_by_name['TransactionList']
_DELEGATEDRESOURCEMESSAGE = DESCRIPTOR.message_types_by_name['DelegatedResourceMessage']
_DELEGATEDRESOURCELIST = DESCRIPTOR.message_types_by_name['DelegatedResourceList']
_ADDRESSPRKEYPAIRMESSAGE = DESCRIPTOR.message_types_by_name['AddressPrKeyPairMessage']
_EASYTRANSFERRESPONSE = DESCRIPTOR.message_types_by_name['EasyTransferResponse']
_SMARTCONTRACTDATAWRAPPER = DESCRIPTOR.message_types_by_name['SmartContractDataWrapper']
_INTERNALTRANSACTION = DESCRIPTOR.message_types_by_name['InternalTransaction']
_INTERNALTRANSACTION_CALLVALUEINFO = _INTERNALTRANSACTION.nested_types_by_name['CallValueInfo']
_RESOURCERECEIPT = DESCRIPTOR.message_types_by_name['ResourceReceipt']
_TRANSACTIONINFO = DESCRIPTOR.message_types_by_name['TransactionInfo']
_TRANSACTIONINFO_LOG = _TRANSACTIONINFO.nested_types_by_name['Log']
_WITNESS = DESCRIPTOR.message_types_by_name['Witness']
_ACCOUNT = DESCRIPTOR.message_types_by_name['Account']
_ACCOUNT_FROZEN = _ACCOUNT.nested_types_by_name['Frozen']
_ACCOUNT_ASSETENTRY = _ACCOUNT.nested_types_by_name['AssetEntry']
_ACCOUNT_ASSETV2ENTRY = _ACCOUNT.nested_types_by_name['AssetV2Entry']
_ACCOUNT_LATESTASSETOPERATIONTIMEENTRY = _ACCOUNT.nested_types_by_name['LatestAssetOperationTimeEntry']
_ACCOUNT_LATESTASSETOPERATIONTIMEV2ENTRY = _ACCOUNT.nested_types_by_name['LatestAssetOperationTimeV2Entry']
_ACCOUNT_FREEASSETNETUSAGEENTRY = _ACCOUNT.nested_types_by_name['FreeAssetNetUsageEntry']
_ACCOUNT_FREEASSETNETUSAGEV2ENTRY = _ACCOUNT.nested_types_by_name['FreeAssetNetUsageV2Entry']
_ACCOUNT_ACCOUNTRESOURCE = _ACCOUNT.nested_types_by_name['AccountResource']
_MARKETORDERDETAIL = DESCRIPTOR.message_types_by_name['MarketOrderDetail']
_PROPOSAL = DESCRIPTOR.message_types_by_name['Proposal']
_PROPOSAL_PARAMETERSENTRY = _PROPOSAL.nested_types_by_name['ParametersEntry']
_EXCHANGE = DESCRIPTOR.message_types_by_name['Exchange']
_DELEGATEDRESOURCE = DESCRIPTOR.message_types_by_name['DelegatedResource']
_DELEGATEDRESOURCEACCOUNTINDEX = DESCRIPTOR.message_types_by_name['DelegatedResourceAccountIndex']
_TRANSACTIONSIGN = DESCRIPTOR.message_types_by_name['TransactionSign']
_CHAINPARAMETERS = DESCRIPTOR.message_types_by_name['ChainParameters']
_CHAINPARAMETERS_CHAINPARAMETER = _CHAINPARAMETERS.nested_types_by_name['ChainParameter']
_NODEINFO = DESCRIPTOR.message_types_by_name['NodeInfo']
_NODEINFO_CHEATWITNESSINFOMAPENTRY = _NODEINFO.nested_types_by_name['CheatWitnessInfoMapEntry']
_NODEINFO_PEERINFO = _NODEINFO.nested_types_by_name['PeerInfo']
_NODEINFO_CONFIGNODEINFO = _NODEINFO.nested_types_by_name['ConfigNodeInfo']
_NODEINFO_MACHINEINFO = _NODEINFO.nested_types_by_name['MachineInfo']
_NODEINFO_MACHINEINFO_MEMORYDESCINFO = _NODEINFO_MACHINEINFO.nested_types_by_name['MemoryDescInfo']
_NODEINFO_MACHINEINFO_DEADLOCKTHREADINFO = _NODEINFO_MACHINEINFO.nested_types_by_name['DeadLockThreadInfo']
_MARKETORDER = DESCRIPTOR.message_types_by_name['MarketOrder']
_MARKETORDERLIST = DESCRIPTOR.message_types_by_name['MarketOrderList']
_MARKETORDERPAIR = DESCRIPTOR.message_types_by_name['MarketOrderPair']
_MARKETORDERPAIRLIST = DESCRIPTOR.message_types_by_name['MarketOrderPairList']
_MARKETPRICE = DESCRIPTOR.message_types_by_name['MarketPrice']
_MARKETPRICELIST = DESCRIPTOR.message_types_by_name['MarketPriceList']
_NULLIFIERRESULT = DESCRIPTOR.message_types_by_name['NullifierResult']
_DECRYPTNOTESTRC20 = DESCRIPTOR.message_types_by_name['DecryptNotesTRC20']
_DECRYPTNOTESTRC20_NOTETX = _DECRYPTNOTESTRC20.nested_types_by_name['NoteTx']
_TRANSACTIONINFOLIST = DESCRIPTOR.message_types_by_name['TransactionInfoList']
_TRANSACTIONAPPROVEDLIST = DESCRIPTOR.message_types_by_name['TransactionApprovedList']
_TRANSACTIONAPPROVEDLIST_RESULT = _TRANSACTIONAPPROVEDLIST.nested_types_by_name['Result']
_TRANSACTIONSIGNWEIGHT = DESCRIPTOR.message_types_by_name['TransactionSignWeight']
_TRANSACTIONSIGNWEIGHT_RESULT = _TRANSACTIONSIGNWEIGHT.nested_types_by_name['Result']
_NODELIST = DESCRIPTOR.message_types_by_name['NodeList']
_NODELIST_NODE = _NODELIST.nested_types_by_name['Node']
_NODELIST_NODE_ADDRESS = _NODELIST_NODE.nested_types_by_name['Address']
_ACCOUNTNETMESSAGE = DESCRIPTOR.message_types_by_name['AccountNetMessage']
_ACCOUNTNETMESSAGE_ASSETNETUSEDENTRY = _ACCOUNTNETMESSAGE.nested_types_by_name['AssetNetUsedEntry']
_ACCOUNTNETMESSAGE_ASSETNETLIMITENTRY = _ACCOUNTNETMESSAGE.nested_types_by_name['AssetNetLimitEntry']
_ACCOUNTRESOURCEMESSAGE = DESCRIPTOR.message_types_by_name['AccountResourceMessage']
_ACCOUNTRESOURCEMESSAGE_ASSETNETUSEDENTRY = _ACCOUNTRESOURCEMESSAGE.nested_types_by_name['AssetNetUsedEntry']
_ACCOUNTRESOURCEMESSAGE_ASSETNETLIMITENTRY = _ACCOUNTRESOURCEMESSAGE.nested_types_by_name['AssetNetLimitEntry']
_TRANSACTIONRETURN_RESPONSE_CODE = _TRANSACTIONRETURN.enum_types_by_name['response_code']
_TRANSACTIONINFO_CODE = _TRANSACTIONINFO.enum_types_by_name['code']
_PROPOSAL_STATE = _PROPOSAL.enum_types_by_name['State']
_MARKETORDER_STATE = _MARKETORDER.enum_types_by_name['State']
_TRANSACTIONAPPROVEDLIST_RESULT_RESPONSE_CODE = _TRANSACTIONAPPROVEDLIST_RESULT.enum_types_by_name['response_code']
_TRANSACTIONSIGNWEIGHT_RESULT_RESPONSE_CODE = _TRANSACTIONSIGNWEIGHT_RESULT.enum_types_by_name['response_code']
BlockExtention = _reflection.GeneratedProtocolMessageType('BlockExtention', (_message.Message,), {
  'DESCRIPTOR' : _BLOCKEXTENTION,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.BlockExtention)
  })
_sym_db.RegisterMessage(BlockExtention)

BlockListExtention = _reflection.GeneratedProtocolMessageType('BlockListExtention', (_message.Message,), {
  'DESCRIPTOR' : _BLOCKLISTEXTENTION,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.BlockListExtention)
  })
_sym_db.RegisterMessage(BlockListExtention)

TransactionReturn = _reflection.GeneratedProtocolMessageType('TransactionReturn', (_message.Message,), {
  'DESCRIPTOR' : _TRANSACTIONRETURN,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.TransactionReturn)
  })
_sym_db.RegisterMessage(TransactionReturn)

TransactionExtention = _reflection.GeneratedProtocolMessageType('TransactionExtention', (_message.Message,), {
  'DESCRIPTOR' : _TRANSACTIONEXTENTION,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.TransactionExtention)
  })
_sym_db.RegisterMessage(TransactionExtention)

WitnessList = _reflection.GeneratedProtocolMessageType('WitnessList', (_message.Message,), {
  'DESCRIPTOR' : _WITNESSLIST,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.WitnessList)
  })
_sym_db.RegisterMessage(WitnessList)

ProposalList = _reflection.GeneratedProtocolMessageType('ProposalList', (_message.Message,), {
  'DESCRIPTOR' : _PROPOSALLIST,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.ProposalList)
  })
_sym_db.RegisterMessage(ProposalList)

ExchangeList = _reflection.GeneratedProtocolMessageType('ExchangeList', (_message.Message,), {
  'DESCRIPTOR' : _EXCHANGELIST,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.ExchangeList)
  })
_sym_db.RegisterMessage(ExchangeList)

AssetIssueList = _reflection.GeneratedProtocolMessageType('AssetIssueList', (_message.Message,), {
  'DESCRIPTOR' : _ASSETISSUELIST,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.AssetIssueList)
  })
_sym_db.RegisterMessage(AssetIssueList)

BlockList = _reflection.GeneratedProtocolMessageType('BlockList', (_message.Message,), {
  'DESCRIPTOR' : _BLOCKLIST,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.BlockList)
  })
_sym_db.RegisterMessage(BlockList)

TransactionList = _reflection.GeneratedProtocolMessageType('TransactionList', (_message.Message,), {
  'DESCRIPTOR' : _TRANSACTIONLIST,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.TransactionList)
  })
_sym_db.RegisterMessage(TransactionList)

DelegatedResourceMessage = _reflection.GeneratedProtocolMessageType('DelegatedResourceMessage', (_message.Message,), {
  'DESCRIPTOR' : _DELEGATEDRESOURCEMESSAGE,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.DelegatedResourceMessage)
  })
_sym_db.RegisterMessage(DelegatedResourceMessage)

DelegatedResourceList = _reflection.GeneratedProtocolMessageType('DelegatedResourceList', (_message.Message,), {
  'DESCRIPTOR' : _DELEGATEDRESOURCELIST,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.DelegatedResourceList)
  })
_sym_db.RegisterMessage(DelegatedResourceList)

AddressPrKeyPairMessage = _reflection.GeneratedProtocolMessageType('AddressPrKeyPairMessage', (_message.Message,), {
  'DESCRIPTOR' : _ADDRESSPRKEYPAIRMESSAGE,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.AddressPrKeyPairMessage)
  })
_sym_db.RegisterMessage(AddressPrKeyPairMessage)

EasyTransferResponse = _reflection.GeneratedProtocolMessageType('EasyTransferResponse', (_message.Message,), {
  'DESCRIPTOR' : _EASYTRANSFERRESPONSE,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.EasyTransferResponse)
  })
_sym_db.RegisterMessage(EasyTransferResponse)

SmartContractDataWrapper = _reflection.GeneratedProtocolMessageType('SmartContractDataWrapper', (_message.Message,), {
  'DESCRIPTOR' : _SMARTCONTRACTDATAWRAPPER,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.SmartContractDataWrapper)
  })
_sym_db.RegisterMessage(SmartContractDataWrapper)

InternalTransaction = _reflection.GeneratedProtocolMessageType('InternalTransaction', (_message.Message,), {

  'CallValueInfo' : _reflection.GeneratedProtocolMessageType('CallValueInfo', (_message.Message,), {
    'DESCRIPTOR' : _INTERNALTRANSACTION_CALLVALUEINFO,
    '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
    # @@protoc_insertion_point(class_scope:protocol.InternalTransaction.CallValueInfo)
    })
  ,
  'DESCRIPTOR' : _INTERNALTRANSACTION,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.InternalTransaction)
  })
_sym_db.RegisterMessage(InternalTransaction)
_sym_db.RegisterMessage(InternalTransaction.CallValueInfo)

ResourceReceipt = _reflection.GeneratedProtocolMessageType('ResourceReceipt', (_message.Message,), {
  'DESCRIPTOR' : _RESOURCERECEIPT,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.ResourceReceipt)
  })
_sym_db.RegisterMessage(ResourceReceipt)

TransactionInfo = _reflection.GeneratedProtocolMessageType('TransactionInfo', (_message.Message,), {

  'Log' : _reflection.GeneratedProtocolMessageType('Log', (_message.Message,), {
    'DESCRIPTOR' : _TRANSACTIONINFO_LOG,
    '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
    # @@protoc_insertion_point(class_scope:protocol.TransactionInfo.Log)
    })
  ,
  'DESCRIPTOR' : _TRANSACTIONINFO,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.TransactionInfo)
  })
_sym_db.RegisterMessage(TransactionInfo)
_sym_db.RegisterMessage(TransactionInfo.Log)

Witness = _reflection.GeneratedProtocolMessageType('Witness', (_message.Message,), {
  'DESCRIPTOR' : _WITNESS,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.Witness)
  })
_sym_db.RegisterMessage(Witness)

Account = _reflection.GeneratedProtocolMessageType('Account', (_message.Message,), {

  'Frozen' : _reflection.GeneratedProtocolMessageType('Frozen', (_message.Message,), {
    'DESCRIPTOR' : _ACCOUNT_FROZEN,
    '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
    # @@protoc_insertion_point(class_scope:protocol.Account.Frozen)
    })
  ,

  'AssetEntry' : _reflection.GeneratedProtocolMessageType('AssetEntry', (_message.Message,), {
    'DESCRIPTOR' : _ACCOUNT_ASSETENTRY,
    '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
    # @@protoc_insertion_point(class_scope:protocol.Account.AssetEntry)
    })
  ,

  'AssetV2Entry' : _reflection.GeneratedProtocolMessageType('AssetV2Entry', (_message.Message,), {
    'DESCRIPTOR' : _ACCOUNT_ASSETV2ENTRY,
    '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
    # @@protoc_insertion_point(class_scope:protocol.Account.AssetV2Entry)
    })
  ,

  'LatestAssetOperationTimeEntry' : _reflection.GeneratedProtocolMessageType('LatestAssetOperationTimeEntry', (_message.Message,), {
    'DESCRIPTOR' : _ACCOUNT_LATESTASSETOPERATIONTIMEENTRY,
    '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
    # @@protoc_insertion_point(class_scope:protocol.Account.LatestAssetOperationTimeEntry)
    })
  ,

  'LatestAssetOperationTimeV2Entry' : _reflection.GeneratedProtocolMessageType('LatestAssetOperationTimeV2Entry', (_message.Message,), {
    'DESCRIPTOR' : _ACCOUNT_LATESTASSETOPERATIONTIMEV2ENTRY,
    '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
    # @@protoc_insertion_point(class_scope:protocol.Account.LatestAssetOperationTimeV2Entry)
    })
  ,

  'FreeAssetNetUsageEntry' : _reflection.GeneratedProtocolMessageType('FreeAssetNetUsageEntry', (_message.Message,), {
    'DESCRIPTOR' : _ACCOUNT_FREEASSETNETUSAGEENTRY,
    '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
    # @@protoc_insertion_point(class_scope:protocol.Account.FreeAssetNetUsageEntry)
    })
  ,

  'FreeAssetNetUsageV2Entry' : _reflection.GeneratedProtocolMessageType('FreeAssetNetUsageV2Entry', (_message.Message,), {
    'DESCRIPTOR' : _ACCOUNT_FREEASSETNETUSAGEV2ENTRY,
    '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
    # @@protoc_insertion_point(class_scope:protocol.Account.FreeAssetNetUsageV2Entry)
    })
  ,

  'AccountResource' : _reflection.GeneratedProtocolMessageType('AccountResource', (_message.Message,), {
    'DESCRIPTOR' : _ACCOUNT_ACCOUNTRESOURCE,
    '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
    # @@protoc_insertion_point(class_scope:protocol.Account.AccountResource)
    })
  ,
  'DESCRIPTOR' : _ACCOUNT,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.Account)
  })
_sym_db.RegisterMessage(Account)
_sym_db.RegisterMessage(Account.Frozen)
_sym_db.RegisterMessage(Account.AssetEntry)
_sym_db.RegisterMessage(Account.AssetV2Entry)
_sym_db.RegisterMessage(Account.LatestAssetOperationTimeEntry)
_sym_db.RegisterMessage(Account.LatestAssetOperationTimeV2Entry)
_sym_db.RegisterMessage(Account.FreeAssetNetUsageEntry)
_sym_db.RegisterMessage(Account.FreeAssetNetUsageV2Entry)
_sym_db.RegisterMessage(Account.AccountResource)

MarketOrderDetail = _reflection.GeneratedProtocolMessageType('MarketOrderDetail', (_message.Message,), {
  'DESCRIPTOR' : _MARKETORDERDETAIL,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.MarketOrderDetail)
  })
_sym_db.RegisterMessage(MarketOrderDetail)

Proposal = _reflection.GeneratedProtocolMessageType('Proposal', (_message.Message,), {

  'ParametersEntry' : _reflection.GeneratedProtocolMessageType('ParametersEntry', (_message.Message,), {
    'DESCRIPTOR' : _PROPOSAL_PARAMETERSENTRY,
    '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
    # @@protoc_insertion_point(class_scope:protocol.Proposal.ParametersEntry)
    })
  ,
  'DESCRIPTOR' : _PROPOSAL,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.Proposal)
  })
_sym_db.RegisterMessage(Proposal)
_sym_db.RegisterMessage(Proposal.ParametersEntry)

Exchange = _reflection.GeneratedProtocolMessageType('Exchange', (_message.Message,), {
  'DESCRIPTOR' : _EXCHANGE,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.Exchange)
  })
_sym_db.RegisterMessage(Exchange)

DelegatedResource = _reflection.GeneratedProtocolMessageType('DelegatedResource', (_message.Message,), {
  'DESCRIPTOR' : _DELEGATEDRESOURCE,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.DelegatedResource)
  })
_sym_db.RegisterMessage(DelegatedResource)

DelegatedResourceAccountIndex = _reflection.GeneratedProtocolMessageType('DelegatedResourceAccountIndex', (_message.Message,), {
  'DESCRIPTOR' : _DELEGATEDRESOURCEACCOUNTINDEX,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.DelegatedResourceAccountIndex)
  })
_sym_db.RegisterMessage(DelegatedResourceAccountIndex)

TransactionSign = _reflection.GeneratedProtocolMessageType('TransactionSign', (_message.Message,), {
  'DESCRIPTOR' : _TRANSACTIONSIGN,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.TransactionSign)
  })
_sym_db.RegisterMessage(TransactionSign)

ChainParameters = _reflection.GeneratedProtocolMessageType('ChainParameters', (_message.Message,), {

  'ChainParameter' : _reflection.GeneratedProtocolMessageType('ChainParameter', (_message.Message,), {
    'DESCRIPTOR' : _CHAINPARAMETERS_CHAINPARAMETER,
    '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
    # @@protoc_insertion_point(class_scope:protocol.ChainParameters.ChainParameter)
    })
  ,
  'DESCRIPTOR' : _CHAINPARAMETERS,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.ChainParameters)
  })
_sym_db.RegisterMessage(ChainParameters)
_sym_db.RegisterMessage(ChainParameters.ChainParameter)

NodeInfo = _reflection.GeneratedProtocolMessageType('NodeInfo', (_message.Message,), {

  'CheatWitnessInfoMapEntry' : _reflection.GeneratedProtocolMessageType('CheatWitnessInfoMapEntry', (_message.Message,), {
    'DESCRIPTOR' : _NODEINFO_CHEATWITNESSINFOMAPENTRY,
    '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
    # @@protoc_insertion_point(class_scope:protocol.NodeInfo.CheatWitnessInfoMapEntry)
    })
  ,

  'PeerInfo' : _reflection.GeneratedProtocolMessageType('PeerInfo', (_message.Message,), {
    'DESCRIPTOR' : _NODEINFO_PEERINFO,
    '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
    # @@protoc_insertion_point(class_scope:protocol.NodeInfo.PeerInfo)
    })
  ,

  'ConfigNodeInfo' : _reflection.GeneratedProtocolMessageType('ConfigNodeInfo', (_message.Message,), {
    'DESCRIPTOR' : _NODEINFO_CONFIGNODEINFO,
    '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
    # @@protoc_insertion_point(class_scope:protocol.NodeInfo.ConfigNodeInfo)
    })
  ,

  'MachineInfo' : _reflection.GeneratedProtocolMessageType('MachineInfo', (_message.Message,), {

    'MemoryDescInfo' : _reflection.GeneratedProtocolMessageType('MemoryDescInfo', (_message.Message,), {
      'DESCRIPTOR' : _NODEINFO_MACHINEINFO_MEMORYDESCINFO,
      '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
      # @@protoc_insertion_point(class_scope:protocol.NodeInfo.MachineInfo.MemoryDescInfo)
      })
    ,

    'DeadLockThreadInfo' : _reflection.GeneratedProtocolMessageType('DeadLockThreadInfo', (_message.Message,), {
      'DESCRIPTOR' : _NODEINFO_MACHINEINFO_DEADLOCKTHREADINFO,
      '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
      # @@protoc_insertion_point(class_scope:protocol.NodeInfo.MachineInfo.DeadLockThreadInfo)
      })
    ,
    'DESCRIPTOR' : _NODEINFO_MACHINEINFO,
    '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
    # @@protoc_insertion_point(class_scope:protocol.NodeInfo.MachineInfo)
    })
  ,
  'DESCRIPTOR' : _NODEINFO,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.NodeInfo)
  })
_sym_db.RegisterMessage(NodeInfo)
_sym_db.RegisterMessage(NodeInfo.CheatWitnessInfoMapEntry)
_sym_db.RegisterMessage(NodeInfo.PeerInfo)
_sym_db.RegisterMessage(NodeInfo.ConfigNodeInfo)
_sym_db.RegisterMessage(NodeInfo.MachineInfo)
_sym_db.RegisterMessage(NodeInfo.MachineInfo.MemoryDescInfo)
_sym_db.RegisterMessage(NodeInfo.MachineInfo.DeadLockThreadInfo)

MarketOrder = _reflection.GeneratedProtocolMessageType('MarketOrder', (_message.Message,), {
  'DESCRIPTOR' : _MARKETORDER,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.MarketOrder)
  })
_sym_db.RegisterMessage(MarketOrder)

MarketOrderList = _reflection.GeneratedProtocolMessageType('MarketOrderList', (_message.Message,), {
  'DESCRIPTOR' : _MARKETORDERLIST,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.MarketOrderList)
  })
_sym_db.RegisterMessage(MarketOrderList)

MarketOrderPair = _reflection.GeneratedProtocolMessageType('MarketOrderPair', (_message.Message,), {
  'DESCRIPTOR' : _MARKETORDERPAIR,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.MarketOrderPair)
  })
_sym_db.RegisterMessage(MarketOrderPair)

MarketOrderPairList = _reflection.GeneratedProtocolMessageType('MarketOrderPairList', (_message.Message,), {
  'DESCRIPTOR' : _MARKETORDERPAIRLIST,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.MarketOrderPairList)
  })
_sym_db.RegisterMessage(MarketOrderPairList)

MarketPrice = _reflection.GeneratedProtocolMessageType('MarketPrice', (_message.Message,), {
  'DESCRIPTOR' : _MARKETPRICE,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.MarketPrice)
  })
_sym_db.RegisterMessage(MarketPrice)

MarketPriceList = _reflection.GeneratedProtocolMessageType('MarketPriceList', (_message.Message,), {
  'DESCRIPTOR' : _MARKETPRICELIST,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.MarketPriceList)
  })
_sym_db.RegisterMessage(MarketPriceList)

NullifierResult = _reflection.GeneratedProtocolMessageType('NullifierResult', (_message.Message,), {
  'DESCRIPTOR' : _NULLIFIERRESULT,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.NullifierResult)
  })
_sym_db.RegisterMessage(NullifierResult)

DecryptNotesTRC20 = _reflection.GeneratedProtocolMessageType('DecryptNotesTRC20', (_message.Message,), {

  'NoteTx' : _reflection.GeneratedProtocolMessageType('NoteTx', (_message.Message,), {
    'DESCRIPTOR' : _DECRYPTNOTESTRC20_NOTETX,
    '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
    # @@protoc_insertion_point(class_scope:protocol.DecryptNotesTRC20.NoteTx)
    })
  ,
  'DESCRIPTOR' : _DECRYPTNOTESTRC20,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.DecryptNotesTRC20)
  })
_sym_db.RegisterMessage(DecryptNotesTRC20)
_sym_db.RegisterMessage(DecryptNotesTRC20.NoteTx)

TransactionInfoList = _reflection.GeneratedProtocolMessageType('TransactionInfoList', (_message.Message,), {
  'DESCRIPTOR' : _TRANSACTIONINFOLIST,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.TransactionInfoList)
  })
_sym_db.RegisterMessage(TransactionInfoList)

TransactionApprovedList = _reflection.GeneratedProtocolMessageType('TransactionApprovedList', (_message.Message,), {

  'Result' : _reflection.GeneratedProtocolMessageType('Result', (_message.Message,), {
    'DESCRIPTOR' : _TRANSACTIONAPPROVEDLIST_RESULT,
    '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
    # @@protoc_insertion_point(class_scope:protocol.TransactionApprovedList.Result)
    })
  ,
  'DESCRIPTOR' : _TRANSACTIONAPPROVEDLIST,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.TransactionApprovedList)
  })
_sym_db.RegisterMessage(TransactionApprovedList)
_sym_db.RegisterMessage(TransactionApprovedList.Result)

TransactionSignWeight = _reflection.GeneratedProtocolMessageType('TransactionSignWeight', (_message.Message,), {

  'Result' : _reflection.GeneratedProtocolMessageType('Result', (_message.Message,), {
    'DESCRIPTOR' : _TRANSACTIONSIGNWEIGHT_RESULT,
    '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
    # @@protoc_insertion_point(class_scope:protocol.TransactionSignWeight.Result)
    })
  ,
  'DESCRIPTOR' : _TRANSACTIONSIGNWEIGHT,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.TransactionSignWeight)
  })
_sym_db.RegisterMessage(TransactionSignWeight)
_sym_db.RegisterMessage(TransactionSignWeight.Result)

NodeList = _reflection.GeneratedProtocolMessageType('NodeList', (_message.Message,), {

  'Node' : _reflection.GeneratedProtocolMessageType('Node', (_message.Message,), {

    'Address' : _reflection.GeneratedProtocolMessageType('Address', (_message.Message,), {
      'DESCRIPTOR' : _NODELIST_NODE_ADDRESS,
      '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
      # @@protoc_insertion_point(class_scope:protocol.NodeList.Node.Address)
      })
    ,
    'DESCRIPTOR' : _NODELIST_NODE,
    '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
    # @@protoc_insertion_point(class_scope:protocol.NodeList.Node)
    })
  ,
  'DESCRIPTOR' : _NODELIST,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.NodeList)
  })
_sym_db.RegisterMessage(NodeList)
_sym_db.RegisterMessage(NodeList.Node)
_sym_db.RegisterMessage(NodeList.Node.Address)

AccountNetMessage = _reflection.GeneratedProtocolMessageType('AccountNetMessage', (_message.Message,), {

  'AssetNetUsedEntry' : _reflection.GeneratedProtocolMessageType('AssetNetUsedEntry', (_message.Message,), {
    'DESCRIPTOR' : _ACCOUNTNETMESSAGE_ASSETNETUSEDENTRY,
    '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
    # @@protoc_insertion_point(class_scope:protocol.AccountNetMessage.AssetNetUsedEntry)
    })
  ,

  'AssetNetLimitEntry' : _reflection.GeneratedProtocolMessageType('AssetNetLimitEntry', (_message.Message,), {
    'DESCRIPTOR' : _ACCOUNTNETMESSAGE_ASSETNETLIMITENTRY,
    '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
    # @@protoc_insertion_point(class_scope:protocol.AccountNetMessage.AssetNetLimitEntry)
    })
  ,
  'DESCRIPTOR' : _ACCOUNTNETMESSAGE,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.AccountNetMessage)
  })
_sym_db.RegisterMessage(AccountNetMessage)
_sym_db.RegisterMessage(AccountNetMessage.AssetNetUsedEntry)
_sym_db.RegisterMessage(AccountNetMessage.AssetNetLimitEntry)

AccountResourceMessage = _reflection.GeneratedProtocolMessageType('AccountResourceMessage', (_message.Message,), {

  'AssetNetUsedEntry' : _reflection.GeneratedProtocolMessageType('AssetNetUsedEntry', (_message.Message,), {
    'DESCRIPTOR' : _ACCOUNTRESOURCEMESSAGE_ASSETNETUSEDENTRY,
    '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
    # @@protoc_insertion_point(class_scope:protocol.AccountResourceMessage.AssetNetUsedEntry)
    })
  ,

  'AssetNetLimitEntry' : _reflection.GeneratedProtocolMessageType('AssetNetLimitEntry', (_message.Message,), {
    'DESCRIPTOR' : _ACCOUNTRESOURCEMESSAGE_ASSETNETLIMITENTRY,
    '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
    # @@protoc_insertion_point(class_scope:protocol.AccountResourceMessage.AssetNetLimitEntry)
    })
  ,
  'DESCRIPTOR' : _ACCOUNTRESOURCEMESSAGE,
  '__module__' : 'graphsenselib.ingest.tron.grpc.core.response_pb2'
  # @@protoc_insertion_point(class_scope:protocol.AccountResourceMessage)
  })
_sym_db.RegisterMessage(AccountResourceMessage)
_sym_db.RegisterMessage(AccountResourceMessage.AssetNetUsedEntry)
_sym_db.RegisterMessage(AccountResourceMessage.AssetNetLimitEntry)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _ACCOUNT_ASSETENTRY._options = None
  _ACCOUNT_ASSETENTRY._serialized_options = b'8\001'
  _ACCOUNT_ASSETV2ENTRY._options = None
  _ACCOUNT_ASSETV2ENTRY._serialized_options = b'8\001'
  _ACCOUNT_LATESTASSETOPERATIONTIMEENTRY._options = None
  _ACCOUNT_LATESTASSETOPERATIONTIMEENTRY._serialized_options = b'8\001'
  _ACCOUNT_LATESTASSETOPERATIONTIMEV2ENTRY._options = None
  _ACCOUNT_LATESTASSETOPERATIONTIMEV2ENTRY._serialized_options = b'8\001'
  _ACCOUNT_FREEASSETNETUSAGEENTRY._options = None
  _ACCOUNT_FREEASSETNETUSAGEENTRY._serialized_options = b'8\001'
  _ACCOUNT_FREEASSETNETUSAGEV2ENTRY._options = None
  _ACCOUNT_FREEASSETNETUSAGEV2ENTRY._serialized_options = b'8\001'
  _PROPOSAL_PARAMETERSENTRY._options = None
  _PROPOSAL_PARAMETERSENTRY._serialized_options = b'8\001'
  _NODEINFO_CHEATWITNESSINFOMAPENTRY._options = None
  _NODEINFO_CHEATWITNESSINFOMAPENTRY._serialized_options = b'8\001'
  _ACCOUNTNETMESSAGE_ASSETNETUSEDENTRY._options = None
  _ACCOUNTNETMESSAGE_ASSETNETUSEDENTRY._serialized_options = b'8\001'
  _ACCOUNTNETMESSAGE_ASSETNETLIMITENTRY._options = None
  _ACCOUNTNETMESSAGE_ASSETNETLIMITENTRY._serialized_options = b'8\001'
  _ACCOUNTRESOURCEMESSAGE_ASSETNETUSEDENTRY._options = None
  _ACCOUNTRESOURCEMESSAGE_ASSETNETUSEDENTRY._serialized_options = b'8\001'
  _ACCOUNTRESOURCEMESSAGE_ASSETNETLIMITENTRY._options = None
  _ACCOUNTRESOURCEMESSAGE_ASSETNETLIMITENTRY._serialized_options = b'8\001'
  _BLOCKEXTENTION._serialized_start=216
  _BLOCKEXTENTION._serialized_end=348
  _BLOCKLISTEXTENTION._serialized_start=350
  _BLOCKLISTEXTENTION._serialized_end=411
  _TRANSACTIONRETURN._serialized_start=414
  _TRANSACTIONRETURN._serialized_end=840
  _TRANSACTIONRETURN_RESPONSE_CODE._serialized_start=526
  _TRANSACTIONRETURN_RESPONSE_CODE._serialized_end=840
  _TRANSACTIONEXTENTION._serialized_start=843
  _TRANSACTIONEXTENTION._serialized_end=993
  _WITNESSLIST._serialized_start=995
  _WITNESSLIST._serialized_end=1046
  _PROPOSALLIST._serialized_start=1048
  _PROPOSALLIST._serialized_end=1101
  _EXCHANGELIST._serialized_start=1103
  _EXCHANGELIST._serialized_end=1156
  _ASSETISSUELIST._serialized_start=1158
  _ASSETISSUELIST._serialized_end=1220
  _BLOCKLIST._serialized_start=1222
  _BLOCKLIST._serialized_end=1265
  _TRANSACTIONLIST._serialized_start=1267
  _TRANSACTIONLIST._serialized_end=1328
  _DELEGATEDRESOURCEMESSAGE._serialized_start=1330
  _DELEGATEDRESOURCEMESSAGE._serialized_end=1398
  _DELEGATEDRESOURCELIST._serialized_start=1400
  _DELEGATEDRESOURCELIST._serialized_end=1479
  _ADDRESSPRKEYPAIRMESSAGE._serialized_start=1481
  _ADDRESSPRKEYPAIRMESSAGE._serialized_end=1543
  _EASYTRANSFERRESPONSE._serialized_start=1545
  _EASYTRANSFERRESPONSE._serialized_end=1670
  _SMARTCONTRACTDATAWRAPPER._serialized_start=1672
  _SMARTCONTRACTDATAWRAPPER._serialized_end=1769
  _INTERNALTRANSACTION._serialized_start=1772
  _INTERNALTRANSACTION._serialized_end=2012
  _INTERNALTRANSACTION_CALLVALUEINFO._serialized_start=1961
  _INTERNALTRANSACTION_CALLVALUEINFO._serialized_end=2012
  _RESOURCERECEIPT._serialized_start=2015
  _RESOURCERECEIPT._serialized_end=2228
  _TRANSACTIONINFO._serialized_start=2231
  _TRANSACTIONINFO._serialized_end=2983
  _TRANSACTIONINFO_LOG._serialized_start=2899
  _TRANSACTIONINFO_LOG._serialized_end=2951
  _TRANSACTIONINFO_CODE._serialized_start=2953
  _TRANSACTIONINFO_CODE._serialized_end=2983
  _WITNESS._serialized_start=2986
  _WITNESS._serialized_end=3167
  _ACCOUNT._serialized_start=3170
  _ACCOUNT._serialized_end=5202
  _ACCOUNT_FROZEN._serialized_start=4479
  _ACCOUNT_FROZEN._serialized_end=4532
  _ACCOUNT_ASSETENTRY._serialized_start=4534
  _ACCOUNT_ASSETENTRY._serialized_end=4578
  _ACCOUNT_ASSETV2ENTRY._serialized_start=4580
  _ACCOUNT_ASSETV2ENTRY._serialized_end=4626
  _ACCOUNT_LATESTASSETOPERATIONTIMEENTRY._serialized_start=4628
  _ACCOUNT_LATESTASSETOPERATIONTIMEENTRY._serialized_end=4691
  _ACCOUNT_LATESTASSETOPERATIONTIMEV2ENTRY._serialized_start=4693
  _ACCOUNT_LATESTASSETOPERATIONTIMEV2ENTRY._serialized_end=4758
  _ACCOUNT_FREEASSETNETUSAGEENTRY._serialized_start=4760
  _ACCOUNT_FREEASSETNETUSAGEENTRY._serialized_end=4816
  _ACCOUNT_FREEASSETNETUSAGEV2ENTRY._serialized_start=4818
  _ACCOUNT_FREEASSETNETUSAGEV2ENTRY._serialized_end=4876
  _ACCOUNT_ACCOUNTRESOURCE._serialized_start=4879
  _ACCOUNT_ACCOUNTRESOURCE._serialized_end=5202
  _MARKETORDERDETAIL._serialized_start=5204
  _MARKETORDERDETAIL._serialized_end=5318
  _PROPOSAL._serialized_start=5321
  _PROPOSAL._serialized_end=5658
  _PROPOSAL_PARAMETERSENTRY._serialized_start=5542
  _PROPOSAL_PARAMETERSENTRY._serialized_end=5591
  _PROPOSAL_STATE._serialized_start=5593
  _PROPOSAL_STATE._serialized_end=5658
  _EXCHANGE._serialized_start=5661
  _EXCHANGE._serialized_end=5846
  _DELEGATEDRESOURCE._serialized_start=5849
  _DELEGATEDRESOURCE._serialized_end=6034
  _DELEGATEDRESOURCEACCOUNTINDEX._serialized_start=6036
  _DELEGATEDRESOURCEACCOUNTINDEX._serialized_end=6126
  _TRANSACTIONSIGN._serialized_start=6128
  _TRANSACTIONSIGN._serialized_end=6209
  _CHAINPARAMETERS._serialized_start=6212
  _CHAINPARAMETERS._serialized_end=6341
  _CHAINPARAMETERS_CHAINPARAMETER._serialized_start=6297
  _CHAINPARAMETERS_CHAINPARAMETER._serialized_end=6341
  _NODEINFO._serialized_start=6344
  _NODEINFO._serialized_end=8552
  _NODEINFO_CHEATWITNESSINFOMAPENTRY._serialized_start=6758
  _NODEINFO_CHEATWITNESSINFOMAPENTRY._serialized_end=6816
  _NODEINFO_PEERINFO._serialized_start=6819
  _NODEINFO_PEERINFO._serialized_end=7408
  _NODEINFO_CONFIGNODEINFO._serialized_start=7411
  _NODEINFO_CONFIGNODEINFO._serialized_end=7896
  _NODEINFO_MACHINEINFO._serialized_start=7899
  _NODEINFO_MACHINEINFO._serialized_end=8552
  _NODEINFO_MACHINEINFO_MEMORYDESCINFO._serialized_start=8307
  _NODEINFO_MACHINEINFO_MEMORYDESCINFO._serialized_end=8406
  _NODEINFO_MACHINEINFO_DEADLOCKTHREADINFO._serialized_start=8409
  _NODEINFO_MACHINEINFO_DEADLOCKTHREADINFO._serialized_end=8552
  _MARKETORDER._serialized_start=8555
  _MARKETORDER._serialized_end=8925
  _MARKETORDER_STATE._serialized_start=8878
  _MARKETORDER_STATE._serialized_end=8925
  _MARKETORDERLIST._serialized_start=8927
  _MARKETORDERLIST._serialized_end=8983
  _MARKETORDERPAIR._serialized_start=8985
  _MARKETORDERPAIR._serialized_end=9047
  _MARKETORDERPAIRLIST._serialized_start=9049
  _MARKETORDERPAIRLIST._serialized_end=9116
  _MARKETPRICE._serialized_start=9118
  _MARKETPRICE._serialized_end=9188
  _MARKETPRICELIST._serialized_start=9190
  _MARKETPRICELIST._serialized_end=9291
  _NULLIFIERRESULT._serialized_start=9293
  _NULLIFIERRESULT._serialized_end=9328
  _DECRYPTNOTESTRC20._serialized_start=9331
  _DECRYPTNOTESTRC20._serialized_end=9560
  _DECRYPTNOTESTRC20_NOTETX._serialized_start=9406
  _DECRYPTNOTESTRC20_NOTETX._serialized_end=9560
  _TRANSACTIONINFOLIST._serialized_start=9562
  _TRANSACTIONINFOLIST._serialized_end=9635
  _TRANSACTIONAPPROVEDLIST._serialized_start=9638
  _TRANSACTIONAPPROVEDLIST._serialized_end=9997
  _TRANSACTIONAPPROVEDLIST_RESULT._serialized_start=9800
  _TRANSACTIONAPPROVEDLIST_RESULT._serialized_end=9997
  _TRANSACTIONAPPROVEDLIST_RESULT_RESPONSE_CODE._serialized_start=9897
  _TRANSACTIONAPPROVEDLIST_RESULT_RESPONSE_CODE._serialized_end=9997
  _TRANSACTIONSIGNWEIGHT._serialized_start=10000
  _TRANSACTIONSIGNWEIGHT._serialized_end=10479
  _TRANSACTIONSIGNWEIGHT_RESULT._serialized_start=10224
  _TRANSACTIONSIGNWEIGHT_RESULT._serialized_end=10479
  _TRANSACTIONSIGNWEIGHT_RESULT_RESPONSE_CODE._serialized_start=10320
  _TRANSACTIONSIGNWEIGHT_RESULT_RESPONSE_CODE._serialized_end=10479
  _NODELIST._serialized_start=10482
  _NODELIST._serialized_end=10629
  _NODELIST_NODE._serialized_start=10534
  _NODELIST_NODE._serialized_end=10629
  _NODELIST_NODE_ADDRESS._serialized_start=10592
  _NODELIST_NODE_ADDRESS._serialized_end=10629
  _ACCOUNTNETMESSAGE._serialized_start=10632
  _ACCOUNTNETMESSAGE._serialized_end=11023
  _ACCOUNTNETMESSAGE_ASSETNETUSEDENTRY._serialized_start=10918
  _ACCOUNTNETMESSAGE_ASSETNETUSEDENTRY._serialized_end=10969
  _ACCOUNTNETMESSAGE_ASSETNETLIMITENTRY._serialized_start=10971
  _ACCOUNTNETMESSAGE_ASSETNETLIMITENTRY._serialized_end=11023
  _ACCOUNTRESOURCEMESSAGE._serialized_start=11026
  _ACCOUNTRESOURCEMESSAGE._serialized_end=11569
  _ACCOUNTRESOURCEMESSAGE_ASSETNETUSEDENTRY._serialized_start=10918
  _ACCOUNTRESOURCEMESSAGE_ASSETNETUSEDENTRY._serialized_end=10969
  _ACCOUNTRESOURCEMESSAGE_ASSETNETLIMITENTRY._serialized_start=10971
  _ACCOUNTRESOURCEMESSAGE_ASSETNETLIMITENTRY._serialized_end=11023
# @@protoc_insertion_point(module_scope)
